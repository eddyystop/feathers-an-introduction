Only in 02/app/: .editorconfig
Only in 02/app/: index.js.diff
Only in 02/app/: index.js-line.html
Only in 02/app/: index.js-side.html
Only in 02/app/: package.json
diff -dur 02/app/public/feathers-app.js 02/service/public/feathers-app.js
--- 02/app/public/feathers-app.js	2017-01-10 15:06:04.736345442 -0500
+++ 02/service/public/feathers-app.js	2017-01-10 15:48:17.769620432 -0500
@@ -1,39 +1,27 @@
 
-feathersClient
+feathersClients
   .configure(feathers.hooks())
   .configure(feathers.authentication({
     storage: window.localStorage
   }));
 
-let jackId;
-const users = feathersClient.service('/users');
+const teams = feathersClients.service('/teams');
 
-Promise.all([
-  users.create({ email: 'jane.doe@gmail.com', password: '11111', role: 'admin' }),
-  users.create({ email: 'john.doe@gmail.com', password: '22222', role: 'user' }),
-  users.create({ email: 'judy.doe@gmail.com', password: '33333', role: 'user' }),
-  users.create({ email: 'jack.doe@gmail.com', password: '44444', role: 'user' }),
-])
-  .then(results => {
-    console.log('created Jane Doe item\n', results[0]);
-    console.log('created John Doe item\n', results[1]);
-    console.log('created Judy Doe item\n', results[2]);
-    console.log('created Jack Doe item\n', results[3]);
-    
-    jackId = results[3]._id;
+feathersClients.authenticate({
+  type: 'local',
+  'email': 'jane.doe@gmail.com',
+  'password': '11111'
+})
+  .then(() => {
+    // Find team items, and join the user items of their members
+    teams.find({ query: { type: 'dungeon' }})
+      .then(results => {
+        console.log('\nAll dungeon teams\n', JSON.stringify(results.data, null, 2));
+      });
     
-    return feathersClient.authenticate({
-      type: 'local',
-      'email': 'jane.doe@gmail.com',
-      'password': '11111'
-    })
-      .then(() => console.log('\nAuthenticated successfully.\n '))
-      .catch(err => console.error('\nError authenticating:', err));
+    teams.find({ query: { name: 'Lee family' }})
+      .then(results => {
+        console.log('\nLee family\n', JSON.stringify(results.data, null, 2));
+      });
   })
-  .then(() => users.remove(jackId)
-    .then(results => console.log('deleted Jack Doe item\n', results))
-  )
-  .then(() => users.find()
-    .then(results => console.log('find all items\n', results))
-  )
-  .catch(err => console.log(err));
+  .catch(err => console.log('\nError occurred:', err));
diff -dur 02/app/public/rest.html 02/service/public/rest.html
--- 02/app/public/rest.html	2017-01-10 14:53:22.318075701 -0500
+++ 02/service/public/rest.html	2017-01-10 15:45:39.434857599 -0500
@@ -1,6 +1,6 @@
 <html>
 <head>
-  <title>Feathers REST client, with authentication</title>
+  <title>Feathers REST client, multiple services</title>
   <style>
     body {
       font-family: 'Helvetica Neue', 'Helvetica', 'Arial', 'sans-serif';
@@ -12,7 +12,7 @@
 </head>
 <body>
 <h1>Feathers guide</h1>
-<h2>Feathers REST client, with authentication</h2>
+<h2>Feathers REST client, multiple services</h2>
 <br />
 Open console to see results of <strong>feathers-rest</strong> calls.
 <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/core-js/2.1.4/core.min.js"></script>
diff -dur 02/app/public/socketio.html 02/service/public/socketio.html
--- 02/app/public/socketio.html	2017-01-10 14:53:22.496100989 -0500
+++ 02/service/public/socketio.html	2017-01-10 15:45:39.527701686 -0500
@@ -1,6 +1,6 @@
 <html>
 <head>
-  <title>Feathers Socketio client, with authentication</title>
+  <title>Feathers Socketio client, multiple services</title>
   <style>
     body {
       font-family: 'Helvetica Neue', 'Helvetica', 'Arial', 'sans-serif';
@@ -12,7 +12,7 @@
 </head>
 <body>
 <h1>Feathers guide</h1>
-<h2>Feathers Socketio client, with authentication</h2>
+<h2>Feathers Socketio client, multiple services</h2>
 <br />
 Open console to see results of <strong>feathers-socketio</strong> calls.
 <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/core-js/2.1.4/core.min.js"></script>
diff -dur 02/app/src/app.js 02/service/src/app.js
--- 02/app/src/app.js	2016-12-23 17:38:02.788000000 -0500
+++ 02/service/src/app.js	2016-12-25 10:41:50.656161151 -0500
@@ -28,4 +28,47 @@
   .configure(services)
   .configure(middleware);
 
+loadDatabases(app);
+
 module.exports = app;
+
+function loadDatabases(app) {
+  let userIds = [];
+  const teams = app.service('/teams');
+  const users = app.service('/users');
+  
+  console.log('\nClear databases.');
+  Promise.all([
+    teams.remove(null),
+    users.remove(null)
+  ])
+    .then (() => {
+      console.log('\nLoad users.');
+      return  Promise.all([
+        users.create({ email: 'jane.doe@gmail.com', password: '11111', role: 'admin, tank' }),
+        users.create({ email: 'john.doe@gmail.com', password: '22222', role: 'user, heals' }),
+        users.create({ email: 'judy.doe@gmail.com', password: '33333', role: 'user' }),
+        users.create({ email: 'jack.doe@gmail.com', password: '44444', role: 'user' }),
+        users.create({ email: 'tom.smith@gmail.com', password: '55555', role: 'user' }),
+        users.create({ email: 'bob.smith@gmail.com', password: '66666', role: 'user' }),
+        users.create({ email: 'joe.smith@gmail.com', password: '77777', role: 'user' }),
+        users.create({ email: 'tim.lee@gmail.com', password: '88888', role: 'user, damage' }),
+        users.create({ email: 'tod.lee@gmail.com', password: '99999', role: 'user' }),
+        users.create({ email: 'sam.lee@gmail.com', password: '00000', role: 'user' }),
+      ])
+    })
+    .then(results => {
+      userIds = results.map(user => user._id); // This way is not elegant but easy to understand.
+  
+      console.log('\nLoad teams.');
+      return Promise.all([
+        teams.create({ name: 'Doe family', type: 'family', memberIds: [userIds[0], userIds[1], userIds[2], userIds[3]]}),
+        teams.create({ name: 'Smith family', type: 'family', memberIds: [userIds[4], userIds[5], userIds[6]]}),
+        teams.create({ name: 'Lee family', type: 'family', memberIds: [userIds[7], userIds[8], userIds[9]]}),
+        teams.create({ name: 'Fires of Heaven', type: 'dungeon', memberIds: [userIds[0], userIds[1], userIds[7]]}),
+      ]);
+    })
+    .then(() => {
+      console.log('\nDatabases loaded.');
+    })
+}
diff -dur 02/app/src/services/index.js 02/service/src/services/index.js
--- 02/app/src/services/index.js	2016-12-23 17:38:02.716000000 -0500
+++ 02/service/src/services/index.js	2016-12-24 10:50:25.710000000 -0500
@@ -1,11 +1,13 @@
 'use strict';
+const teams = require('./teams');
 const authentication = require('./authentication');
 const user = require('./user');
 
 module.exports = function() {
   const app = this;
-  
-  
+
+
   app.configure(authentication);
   app.configure(user);
+  app.configure(teams);
 };
Only in 02/service/src/services: teams
Only in 02/service/test/services: teams
