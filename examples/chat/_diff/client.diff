diff -bdur --new-file server/finish/curl-requests.sh client/curl-requests.sh
--- server/finish/curl-requests.sh	1969-12-31 19:00:00.000000000 -0500
+++ client/curl-requests.sh	2017-01-01 11:34:53.972000000 -0500
@@ -0,0 +1,6 @@
+printf "\nPOST Hello.\n"
+curl -H 'Content-Type: application/json' --data-binary '{ "text": "Hello." }' http://localhost:3030/messages/
+printf "\nPOST Hello again!\n"
+curl -H 'Content-Type: application/json' --data-binary '{ "text": "Hello again!" }' http://localhost:3030/messages/
+printf "\nPOST Anyone there?\n"
+curl -H 'Content-Type: application/json' --data-binary '{ "text": "Anyone there?" }' http://localhost:3030/messages/
\ No newline at end of file
diff -bdur --new-file server/finish/public/client-app.js client/public/client-app.js
--- server/finish/public/client-app.js	1969-12-31 19:00:00.000000000 -0500
+++ client/public/client-app.js	2017-01-05 09:33:29.548365710 -0500
@@ -0,0 +1,182 @@
+
+/* globals feathersClient: 0, feathers: 0 */
+
+// Routing
+
+let currRoute = null;
+router('sign-in');
+
+function router(newRoute) {
+  if (currRoute === 'chat') { unmountChat(); }
+  
+  $('#sign-up').css('display', newRoute === 'sign-up' ? 'block' : 'none');
+  $('#sign-in').css('display', newRoute === 'sign-in' ? 'block' : 'none');
+  $('#chat').css('display', newRoute === 'chat' ? 'block' : 'none');
+  
+  if (newRoute === 'sign-up') { mountSignUp(); }
+  if (newRoute === 'sign-in') { mountSignIn(); }
+  if (newRoute === 'chat') { mountChat(); }
+  currRoute = newRoute;
+}
+
+// Feathers
+
+feathersClient
+  .configure(feathers.hooks())
+  .configure(feathers.authentication({
+    storage: window.localStorage
+  }));
+
+const userService = feathersClient.service('/users');
+const messageService = feathersClient.service('/messages');
+
+let userCount; // number of users in table
+const defaultAvatar = 'https://placeimg.com/60/60/people';
+
+// Sign up, sign in event handlers
+
+$('#signup-user').on('click', ev => {
+  ev.preventDefault();
+  signUpUser($('#email-signup').val().trim(), $('#password-signup').val().trim());
+});
+
+$('#to-signin-user').on('click', ev => {
+  ev.preventDefault();
+  router('sign-in');
+});
+
+$('#signin-user').on('click', ev => {
+  ev.preventDefault();
+  signInUser($('#email-signin').val().trim(), $('#password-signin').val().trim());
+});
+
+$('#to-signup-user').on('click', ev => {
+  ev.preventDefault();
+  router('sign-up');
+});
+
+// Chat event handlers
+
+$('#signout-user').on('click', ev => {
+  ev.preventDefault();
+  router('sign-in')
+});
+
+$('#send-message').on('submit', function(ev) {
+  ev.preventDefault();
+  const messageEl = $(this).find('[name="text"]'); // message input field
+  sendNewMessage(messageEl.val().trim());
+  messageEl.val(''); // clear input field
+});
+
+messageService.on('created', message => { // no events occur unless client is authenticated
+  displayNewMessage(message);
+});
+
+userService.on('created', user => { // no events occur unless client is authenticated
+  displayNewUser(user);
+});
+
+// Sign in, sign out routines
+
+function mountSignUp() {
+  $('#email-signup').val('');
+  $('#password-signup').val('');
+}
+
+function signUpUser(email, password) {
+  if (!email || !password) {
+    console.log('ERROR: enter name, email and password');
+    return;
+  }
+  
+  userService.create({ email, password })
+    .then(() => router('sign-in'))
+    .catch(err => console.log('ERROR creating user:', err));
+}
+
+function mountSignIn() {
+  $('#email-signin').val('');
+  $('#password-signin').val('');
+}
+
+function signInUser(email, password) {
+  if (!email || !password) {
+    console.log('ERROR: enter email and password');
+    return;
+  }
+  
+  feathersClient.authenticate({ type: 'local', email, password })
+    .then(() => router('chat'))
+    .catch(err => console.log('ERROR: authentication', err));
+}
+
+// Chat routines
+
+function mountChat() {
+  // clear UI
+  userCount = 0;
+  $('.user-list').empty();
+  const chat = $('.chat').empty();
+  
+  messageService.find({ // Display the last few messages
+    query: {
+      $sort: { createdAt: -1 },
+      $limit: 25
+    }
+  })
+    .then(results => results.data.reverse().forEach(displayNewMessage))
+    .catch(err => console.log('ERROR: load messages', err));
+  
+  userService.find() // Display the users
+    .then(results => { results.data.forEach(displayNewUser); })
+    .catch(err => console.log('ERROR: load users', err));
+}
+
+function unmountChat() {
+  feathersClient.logout()
+    .then(() => router('sign-in'))
+    .catch(err => console.log('ERROR logging out:', err));
+}
+
+function sendNewMessage(text) {
+  if (text) {
+    messageService.create({ text }) // create message
+      .catch(err => console.log('ERROR creating message:', err));
+  }
+}
+
+function displayNewMessage(message) {
+  const defaultUser = {
+    image: defaultAvatar,
+    email: 'Anonymous'
+  };
+  
+  const sender = message.sentBy || defaultUser; // Get sender
+  const chat = $('.chat').append(
+    `<div class="message flex flex-row">
+      <img src="${sender.avatar || defaultAvatar}" alt="${sender.email}" class="avatar">
+      <div class="message-wrapper">
+        <p class="message-header">
+          <span class="username font-600">${sender.email}</span>
+          <span class="sent-date font-300">${moment(message.createdAt).format('MMM Do, hh:mm:ss')}</span>
+        </p>
+        <p class="message-content font-300">${message.text}</p>
+      </div>
+    </div>`
+  );
+  
+  chat.scrollTop(chat[0].scrollHeight - chat[0].clientHeight);
+}
+
+function displayNewUser(user) {
+  $('.online-count').html(++userCount); // Update the number of users
+  $('.user-list').append( // Add the user to the list
+    `<li>
+       <a class="block relative" href="#">
+         <img src="${user.avatar || defaultAvatar}" alt="" class="avatar">
+         <span class="absolute username">${user.email}</span>
+       </a>
+    </li>`
+  );
+}
diff -bdur --new-file server/finish/public/client.html client/public/client.html
--- server/finish/public/client.html	1969-12-31 19:00:00.000000000 -0500
+++ client/public/client.html	2017-01-05 09:15:06.373621936 -0500
@@ -0,0 +1,82 @@
+<html>
+<head>
+  <meta http-equiv="content-type" content="text/html; charset=utf-8">
+  <meta name="viewport"
+        content="width=device-width, initial-scale=1.0, maximum-scale=1, user-scalable=0" />
+  <title>Chat (jQuery client)</title>
+  <link rel="shortcut icon" href="favicon.ico">
+  <link rel="stylesheet" href="//cdn.rawgit.com/feathersjs/feathers-chat/v0.1.0/public/base.css">
+  <link rel="stylesheet" href="//cdn.rawgit.com/feathersjs/feathers-chat/v0.1.0/public/chat.css">
+</head>
+<body>
+<h1>Chat (jQuery client)</h1>
+<br />
+<!-- Sign up section -->
+<div id="sign-up" style="display: none;">
+  <h3>Sign up</h3>
+   <input type="text" id="email-signup" placeholder="email: a@a.com" size="15" />
+  <input type="text" id="password-signup" placeholder="password: a" size="15" />
+  <br />
+  <input type="button" id="signup-user" value="Add user" />
+  <input type="button" id="to-signin-user" value="Sign in" />
+</div>
+<!-- Sign in section -->
+<div id="sign-in">
+  <h3>Sign in</h3>
+  <input type="text" id="email-signin" placeholder="email: a@a.com" size="15" />
+  <input type="text" id="password-signin" placeholder="password: a" size="15" />
+  <br />
+  <input type="button" id="signin-user" value="Sign in" />
+  <input type="button" id="to-signup-user" value="Sign up" />
+</div>
+<!-- Chat section -->
+<div id="chat" style="display: none;">
+  <div id="app" class="flex flex-column">
+    <header class="title-bar flex flex-row flex-center">
+      <div class="title-wrapper block center-element">
+        <img class="logo" src="http://feathersjs.com/img/feathers-logo-wide.png"
+             alt="Feathers Logo">
+        <span class="title">Chat</span>
+      </div>
+    </header>
+
+    <div class="flex flex-row flex-1 clear">
+      <aside class="sidebar col col-3 flex flex-column flex-space-between">
+        <header class="flex flex-row flex-center">
+          <h4 class="font-300 text-center">
+            <span class="font-600 online-count">0</span> users
+          </h4>
+        </header>
+
+        <ul class="flex flex-column flex-1 list-unstyled user-list"></ul>
+        <footer class="flex flex-row flex-center">
+          <button id="signout-user" class="button-primary" type="button">Sign out</button>
+        </footer>
+      </aside>
+
+      <div class="flex flex-column col col-9">
+        <main class="chat flex flex-column flex-1 clear"></main>
+
+        <form class="flex flex-row flex-space-between" id="send-message">
+          <input type="text" name="text" class="flex flex-1">
+          <button class="button-primary" type="submit">Send</button>
+        </form>
+      </div>
+    </div>
+  </div>
+</div>
+<script src="//cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.23/browser.min.js"></script>
+<script src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.12.0/moment.js"></script>
+<script src="//code.jquery.com/jquery-2.2.1.js"></script>
+<script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/core-js/2.1.4/core.min.js"></script>
+<script src="//unpkg.com/feathers-client@^1.8.0/dist/feathers.js"></script>
+<script src="/socket.io.min.js"></script>
+<script src="/serverUrl.js"></script>
+<script>
+  const socket = io(serverUrl);
+  const feathersClient = feathers()
+      .configure(feathers.socketio(socket))
+</script>
+<script src="/client-app.js"></script>
+</body>
+</html>
diff -bdur --new-file server/finish/public/socketio-app.js client/public/socketio-app.js
--- server/finish/public/socketio-app.js	2017-01-10 17:59:17.563000000 -0500
+++ client/public/socketio-app.js	1969-12-31 19:00:00.000000000 -0500
@@ -1,115 +0,0 @@
-
-/* globals app: 0, feathers: 0 */
-
-/// [router]
-// DOM
-handleClick('signup-user', signUpUser);
-handleClick('signin-user', signInUser);
-handleClick('signout-user', signOutUser);
-handleClick('send-message', sendMessage);
-handleClick('to-signin-user', () => router('sign-in'));
-handleClick('to-signup-user', () => router('sign-up'));
-
-const els = {};
-['sign-up', 'email-signup', 'password-signup', 'sign-in', 'email-signin', 'password-signin', 'chat', 'message']
-  .forEach(id => els[id] = document.getElementById(id));
-
-// Routing
-const router = (newRoute) => {
-  els['sign-up'].style.display = newRoute === 'sign-up' ? 'block' : 'none';
-  els['sign-in'].style.display = newRoute === 'sign-in' ? 'block' : 'none';
-  els['chat'].style.display = newRoute === 'chat' ? 'block' : 'none';
-};
-router('sign-up');
-//! [router]
-
-/// [events]
-// Feathers
-let userList = [];
-
-feathersClient
-  .configure(feathers.hooks())
-  .configure(feathers.authentication({
-    storage: window.localStorage
-  }));
-
-const users = app.service('/users');
-const messages = app.service('/messages');
-
-users.on('created', () => getUserList());
-users.on('updated', () => getUserList());
-users.on('patched', () => getUserList());
-users.on('removed', () => getUserList());
-
-messages.on('created', message => console.log('message created', message));
-messages.on('updated', message => console.log('message updated', message));
-messages.on('patched', message => console.log('message patched', message));
-messages.on('removed', message => console.log('message removed', message));
-//! [events]
-
-// Helpers
-
-function handleClick(id, func) {
-  document.getElementById(id).addEventListener('click', func);
-}
-
-/// [user-helpers]
-function signUpUser() {
-  const user = { email: els['email-signup'].value.trim(), password: els['password-signup'].value.trim() };
-  
-  if (!user.email || !user.password) {
-    console.log('ERROR: enter name, email and password');
-    return;
-  }
-
-  users.create(user)
-    .then(() =>  router('sign-in'))
-    .catch(err => console.log('ERROR creating user:', err));
-}
-
-function signInUser() {
-  const email = els['email-signin'].value.trim();
-  const password = els['password-signin'].value.trim();
-  
-  if (!email || !password) {
-    console.log('ERROR: enter email and password');
-    return;
-  }
-  
-  app.authenticate({ type: 'local', email, password })
-    .then(() => {
-      getUserList();
-      router('chat');
-    })
-    .catch(err => console.error('ERROR authenticating:', err));
-}
-
-function signOutUser() {
-  app.logout()
-    .then(() => router('sign-in'))
-    .catch(err => console.log('ERROR logging out:', err));
-}
-
-function getUserList() {
-  users.find()
-    .then(results => {
-      userList = results.data;
-      console.log('Users in chat\n', results.data.map(user => user.email));
-    });
-}
-//! [user-helpers]
-
-/// [message-helpers]
-function sendMessage() {
-  const message = { text: els['message'].value.trim() };
-  
-  if (!message.text) {
-    console.log('ERROR: enter message');
-    return;
-  }
-  
-  messages.create(message)
-    .then(() => els['message'].value = '')
-    .catch(err => console.log('ERROR creating message:', err));
-}
-//! [message-helpers]
diff -bdur --new-file server/finish/public/socketio.html client/public/socketio.html
--- server/finish/public/socketio.html	2017-01-10 18:07:46.405636528 -0500
+++ client/public/socketio.html	1969-12-31 19:00:00.000000000 -0500
@@ -1,50 +0,0 @@
-<html>
-<head>
-  <title>Chat (JavaScript client)</title>
-  <style>
-    body {
-      font-family: 'Helvetica Neue', 'Helvetica', 'Arial', 'sans-serif';
-      font-weight: 400;
-      font-size: 16px;
-      color: #333;
-    }
-  </style>
-</head>
-<body>
-<h1>Chat (JavaScript client)</h1>
-<br />
-<div id="sign-up">
-  <h3>Sign up</h3>
-   <input type="text" id="email-signup" placeholder="email: a@a.com" size="15" />
-  <input type="text" id="password-signup" placeholder="password: a" size="15" />
-  <br />
-  <input type="button" id="signup-user" value="Add user" />
-  <input type="button" id="to-signin-user" value="Sign in" />
-</div>
-<div id="sign-in" style="display: none;">
-  <h3>Sign in</h3>
-  <input type="text" id="email-signin" placeholder="email: a@a.com" size="15" />
-  <input type="text" id="password-signin" placeholder="password: a" size="15" />
-  <br />
-  <input type="button" id="signin-user" value="Sign in" />
-  <input type="button" id="to-signup-user" value="Sign up" />
-</div>
-<div id="chat" style="display: none;">
-  <h3>Chat room</h3>
-  <input type="text" id="message" placeholder="New message" size="30" />
-  <br />
-  <input type="button" id="send-message" value="Send message" />
-  <input type="button" id="signout-user" value="Sign out" />
-</div>
-<script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/core-js/2.1.4/core.min.js"></script>
-<script src="//unpkg.com/feathers-client@^1.8.0/dist/feathers.js"></script>
-<script src="/socket.io.min.js"></script>
-<script src="/serverUrl.js"></script>
-<script>
-  const socket = io(serverUrl);
-  const feathersClient = feathers()
-      .configure(feathers.socketio(socket))
-</script>
-<script src="/socketio-app.js"></script>
-</body>
-</html>
diff -bdur --new-file server/finish/src/app.js client/src/app.js
--- server/finish/src/app.js	2017-01-06 21:06:19.211501444 -0500
+++ client/src/app.js	2017-01-04 16:06:15.658088806 -0500
@@ -39,4 +39,6 @@
   .then(() => console.log('messages table cleared.'))
   .catch(err => console.log('ERROR clearing messages table:', err));
 
+//app.service('/messages').Model.remove({}, { multi: true })
+
 module.exports = app;
diff -bdur --new-file server/finish/src/services/message/hooks/index.js client/src/services/message/hooks/index.js
--- server/finish/src/services/message/hooks/index.js	2017-01-06 20:40:43.619801264 -0500
+++ client/src/services/message/hooks/index.js	2017-01-04 16:02:23.426839416 -0500
@@ -7,7 +7,7 @@
 const globalHooks = require('../../../hooks');
 const hooks = require('feathers-hooks');
 const auth = require('feathers-authentication').hooks;
-const { setCreatedAt, populate, dePopulate, serialize } = require('feathers-hooks-common');
+const { setCreatedAt, populate, dePopulate, serialize, when, isProvider } = require('feathers-hooks-common');
 
 const restrictToSenderOrServer = when(isProvider('external'), restrictToSender());
 
