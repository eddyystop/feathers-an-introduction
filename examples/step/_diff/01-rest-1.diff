--- 01/db-connector/1.js	2017-01-13 10:32:26.281818262 -0500
+++ 01/rest/1.js	2017-01-13 09:46:27.384208386 -0500
@@ -1,40 +1,22 @@
 
-// Example - Create service on server with NeDB database
+// Example - Create REST API
 
-/// [dependencies]
 const NeDB = require('nedb');
 const path = require('path');
-const feathers = require('feathers');
 const service = require('feathers-nedb');
-//! [dependencies]
-
-/// [feathers]
-const app = feathers()
-  .configure(services);
-//! [feathers]
+const rest = require('feathers-rest');
 
-/// [create]
-const users = app.service('/users');
+const expressServerConfig = require('../common/expressServerConfig');
+const expressMiddleware = require('../common/expressMiddleware');
 
-Promise.all([
-  users.create({ email: 'jane.doe@gmail.com', password: '11111', role: 'admin' }),
-  users.create({ email: 'john.doe@gmail.com', password: '22222', role: 'user' }),
-  users.create({ email: 'judy.doe@gmail.com', password: '33333', role: 'user' })
-])
-//! [create]
-/// [results]
-  .then(results => {
-    console.log('created Jane Doe item\n', results[0]);
-    console.log('created John Doe item\n', results[1]);
-    console.log('created Judy Doe item\n', results[2]);
+const app = expressServerConfig()
+  .configure(rest())
+  .configure(services)
+  .configure(expressMiddleware);
     
-    return users.find()
-      .then(results => console.log('find all items\n', results));
-  })
-  .catch(err => console.log('Error occurred:', err));
-//! [results]
+const server = app.listen(3030);
+server.on('listening', () => console.log(`Feathers application started on port 3030`));
 
-/// [services]
 function services() {
   this.use('/users', service({ Model: userModel() }));
 }
@@ -45,4 +27,3 @@
     autoload: true
   });
 }
-//! [services]
